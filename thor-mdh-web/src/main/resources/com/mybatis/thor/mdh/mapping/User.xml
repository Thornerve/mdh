<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thor.mdh.UserMapper">
	
	<!-- user 映射 -->
    <resultMap id="userResultMap" type="User"> 
    	<id column="user_id" property="userId"/> 
    	<result column="user_name" property="userName" /> 
    	<result column="mobile" property="mobile" />
    	<result column="email" property="email" />
        <result column="cover_img_url" property="coverImgUrl" />
        <result column="user_type" property="userType" />
        <result column="business_licence" property="businessLicence" />
        <result column="identification" property="identification" />
        <result column="create_time" property="createTime" />
    </resultMap> 
	
	<!-- 用户登录 -->
	<select id="loginUser" parameterType="hashmap" resultMap="userResultMap">
        select 
        	user_id,user_name,mobile,email,cover_img_url,user_type,business_licence,identification,create_time 
        from 
        	t_user 
        where 
        	user_name = #{userName} and password = #{password} and status = 1;
    </select>
    
    <!-- 根据用户id查询 -->
    <select id="queryUserByID" parameterType="int" resultMap="userResultMap">
        select 
        	user_id,user_name,mobile,email,cover_img_url,user_type,business_licence,identification,create_time 
        from 
        	t_user 
        where 
        	user_id = #{userId} and status = 1;
    </select>
    
    <!-- 未认证用户查询 -->
    <select id="queryUnIdentificationUserList" parameterType="int" resultMap="userResultMap" resultType="map">
        select 
        	user_id,user_name,mobile,email,cover_img_url,user_type,business_licence,identification,create_time 
        from 
        	t_user 
        where 
        	identification = 1 and status = 1;
    </select>
    
    <!-- 查询手机号是否存在（一个手机号只能注册一个用户） -->
 	<select id="queryMobileExist" parameterType="int" resultMap="userResultMap">
 		select
 			user_id,user_name,mobile,email,cover_img_url,user_type,business_licence,identification,create_time
 		from
 			t_user
 		where
 			mobile = #{mobile};
 	</select>
 	
 	<!-- 查询邮箱是否存在（一个邮箱只能注册一个用户） -->
 	<select id="queryEmailExist" parameterType="int" resultMap="userResultMap">
 		select
 			user_id,user_name,mobile,email,cover_img_url,user_type,business_licence,identification,create_time
 		from
 			t_user
 		where
 			email = #{email};
 	</select>
 	
 	<!-- 根据用户id查询邮箱 -->
 	<select id="queryEmailByUserId" parameterType="int" resultType="String">
 		select
 			email
 		from
 			t_user
 		where
 			user_id = #{userId};
 	</select>
 	
 	<!-- 根据用户id查询手机 -->
 	<select id="queryMobileByUserId" parameterType="int" resultType="String">
 		select
 			mobile
 		from
 			t_user
 		where
 			user_id = #{userId};
 	</select>
    
    <!-- 创建用户 -->
    <insert id="insertUser" parameterType="User" keyProperty="id" useGeneratedKeys="true">
    	insert into 
    		t_user (user_name,password,mobile,email,user_type,business_licence,create_time,status) 
    	values 
    		(#{userName},#{password},#{mobile},#{email},#{userType},#{businessLicence},#{createTime},#{status});
    </insert>
    
    <!-- 更新用户认证信息 认证用户-->
    <update id="updateUserIdentificationById" parameterType="int">
    	update 
    		t_user 
    	set 
    		identification = 2 where user_id = #{userId};
    </update>
    
    <!-- 更新用户手机-->
    <update id="updateUserMobileById" parameterType="hashmap" >
    	update 
    		t_user 
    	set 
    		mobile = #{mobile} where user_id = #{userId};
    </update>
    
    <!-- 更新用户邮箱-->
    <update id="updateUserEmailById" parameterType="hashmap" >
    	update 
    		t_user 
    	set 
    		email = #{email} where user_id = #{userId};
    </update>
    
     <!-- 更新用户密码-->
    <update id="updatePassWordById" parameterType="hashmap" >
    	update 
    		t_user 
    	set 
    		password = #{password} where user_id = #{userId};
    </update>
    
    <!-- 更新用户图像 -->
    
    <!-- 删除用户 改变数据库用户数据状态 -->
    <update id="deleteUserById" parameterType="int">
    	update 
    		t_user 
    	set 
    		status = 2 where user_id = #{userId};
    </update>
</mapper>