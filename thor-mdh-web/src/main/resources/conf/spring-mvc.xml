<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.thor.mdh.web.controller" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven validator="validator">
		<mvc:message-converters>
			<bean class="com.thor.mdh.web.freemarker.StringEscapeHttpMessageConverterr"></bean> 
			<bean class="com.thor.mdh.web.freemarker.MappingGson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>text/json;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
		<mvc:async-support default-timeout="30000" task-executor="taskExecutor">
			<mvc:callable-interceptors>
				<bean class="com.thor.mdh.web.interceptor.CallableInterceptor"/>
			</mvc:callable-interceptors>
		</mvc:async-support>
	</mvc:annotation-driven>
	
		<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 线程池维护线程的最少数量(服务器CPU个数 + 1) -->
		<property name="corePoolSize" value="9"></property>
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="300"></property>
		<!-- 线程池维护线程的最大数量 与tomcat的最大线程数保持一致 -->
		<property name="maxPoolSize" value="200"></property>
		<!-- 线程池所使用的缓冲队列 -->
		<property name="queueCapacity" value="1000"></property>
		<!-- 最大负荷工作之后，执行的操作 -->
		<property name="rejectedExecutionHandler" ref="discardPolicy"></property>
		<!-- 线程名称前缀 -->
		<property name="threadNamePrefix" value="saic-async"></property>
	</bean>
	
	<bean id="discardPolicy" class="java.util.concurrent.ThreadPoolExecutor.DiscardPolicy"></bean>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
  	<mvc:resources mapping="/js/**" location="/resources/js/" />
  	<mvc:resources mapping="/images/**" location="/resources/images/" />
  	<mvc:resources mapping="/css/**" location="/resources/css/" />
  	<mvc:resources mapping="/bower_components/**" location="/resources/bower_components/" />
  	<mvc:resources mapping="/fonts/**" location="/resources/fonts/" />
   	
    <!-- 统一异常处理 -->
    <bean id="exceptionResolver"
        class="com.thor.mdh.web.interceptor.ExceptionHandle">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Throwable">/mobile/mall/public/404.ftl</prop>
            </props>
        </property>
        <property name="defaultErrorView" value="/mobile/mall/public/404.ftl" />
        <property name="warnLogCategory" value="com.thor.mdh.web.interceptor.ExceptionHandle" />
    </bean>
	
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<!-- 版本1的配置<property name="supportedMediaTypes">
				<list>
					<value>text/html;charset=UTF-8</value>
				</list>
			</property>
		 -->
		 <property name="supportedMediaTypes">
		 	<list>
		    	<value>text/html;charset=UTF-8</value>
		   </list>
		 </property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	<!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	
	<!-- 针对freemarker的视图配置 -->
    <bean id="viewResolver"
        class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true" />
        <property name="order" value="1" />
        <!-- <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/> -->
        <property name="viewClass" value="com.thor.mdh.web.freemarker.CustomFreeMarkerView"/>
        <property name="viewNames">
			<array>
				<value>*.ftl</value>
			</array>
		</property>
		<property name="requestContextAttribute" value="request" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="allowSessionOverride" value="true" />
		<property name="contentType" value="text/html;charset=utf-8" /><!--编码 -->
    </bean>
	
	<!-- 为了支持forward,redirect -->
    <bean id="jsltViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="order" value="3" />
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
	  <description>Required for Freemarker to work in web tier</description>
		<property name="configuration" ref="freemarkerConfiguration" />
	</bean>
	
	<bean id="freemarkerConfiguration"
		class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
		<description>Using the Config directly so we can use it outside the	web tier</description>
		<!-- 模板加载路径 -->
		<property name="templateLoaderPaths">
			<list>
				<value>/WEB-INF/views</value>
			</list>
		</property>
		<property name="configLocation">
			<value>classpath:conf/freemarker.properties</value>
		</property>
		<!--全局变量部分 -->
		<property name="freemarkerVariables">
			<map>
				<entry key="base" value=""/>
			</map>
		</property>
		<property name="defaultEncoding" value="utf-8" />
	</bean>
	
	<bean id="omitString" class="com.thor.mdh.web.freemarker.OmitString"/>
	
	<bean id="gaForIp" class="com.thor.mdh.web.freemarker.GaForIp"></bean>
	
    <!-- 基于cookie的i18n -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="cookieName" value="clientlanguage"/>
        <property name="cookieMaxAge" value="94608000"/>
        <property name="defaultLocale" value="zh" />  
    </bean>
	
    <!-- i18n -->
    <bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>classpath:i18n/messages</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8" />
        <property name="fallbackToSystemLocale" value="true" />
        <property name="useCodeAsDefaultMessage" value="false" />
    </bean>
    
    <!-- hibernate validator 资源配置 -->
    <bean name="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource">
            <ref bean="messageSource" />
        </property>
    </bean>

    <!-- backlog -->
    <bean id="loggingInitialization" 
        class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="com.thor.mdh.api.util.LogbackConfigurer" />
        <property name="targetMethod" value="initLogging" />
        <property name="arguments">
            <list>
                <value>classpath:logback.xml</value>
            </list>
        </property>
    </bean>
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />  
    </bean> 
    
</beans>